/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package player;

import javazoom.jl.decoder.JavaLayerException;

import javax.swing.*;

/**
 *
 * @author user
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private String directory = "";
    private Playlist playlist;
    private final DefaultListModel trackListModel;
    private PausablePlayer player;

    private void playTrack() {
        playlist.setCurrent(trackList.getSelectedIndex());
        if (player != null) {
            player.stop();
        }
        try {
            player = new PausablePlayer(playlist.getCurrentTrack().getFileStream(), () -> {
                nextTrack();
            });
            player.play();
        } catch (JavaLayerException e) {
            e.printStackTrace();
        }
    }

    private void nextTrack() {
        if (playlist.next()) {
            trackList.setSelectedIndex(playlist.getCurrent());
            playTrack();
        }
    }

    private void prevTrack() {
        if (playlist.prev()) {
            trackList.setSelectedIndex(playlist.getCurrent());
            playTrack();
        }
    }

    private void loadFolder(String path) {
        playlist = new Playlist(path);
        String filename;
        trackListModel.clear();
        for (Track t : playlist.getAll()) {
            filename = t.getTitle();
            trackListModel.addElement(filename.substring(0, filename.length() - 4));
        }
        trackList.setSelectedIndex(0);
        playTrack();
        player.pause();
    }

    public Main() {
        initComponents();
        trackListModel = new DefaultListModel();
        trackList.setModel(trackListModel);
        openButtonMouseClicked(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        prevButton = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        trackList = new javax.swing.JList<>();
        stopButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        shuffleCheckBox = new javax.swing.JCheckBox();
        repeatAllCheckBox = new javax.swing.JCheckBox();
        repeatTrackCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MPlayer");
        setResizable(false);

        prevButton.setText("prev");
        prevButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prevButtonMouseClicked(evt);
            }
        });

        playButton.setText("play/pause");
        playButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playButtonMouseClicked(evt);
            }
        });

        nextButton.setText("next");
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextButtonMouseClicked(evt);
            }
        });

        trackList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trackListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(trackList);

        stopButton.setText("stop");
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopButtonMouseClicked(evt);
            }
        });

        openButton.setText("open");
        openButton.setToolTipText("");
        openButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openButtonMouseClicked(evt);
            }
        });

        shuffleCheckBox.setText("shuffle");
        shuffleCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shuffleCheckBoxActionPerformed(evt);
            }
        });

        repeatAllCheckBox.setText("all");
        repeatAllCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeatAllCheckBoxActionPerformed(evt);
            }
        });

        repeatTrackCheckBox.setText("track");
        repeatTrackCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeatTrackCheckBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Repeat:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(prevButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stopButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(playButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextButton)
                                .addGap(0, 22, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(openButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shuffleCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(repeatAllCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(repeatTrackCheckBox)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevButton)
                    .addComponent(nextButton)
                    .addComponent(stopButton)
                    .addComponent(playButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openButton)
                    .addComponent(shuffleCheckBox)
                    .addComponent(repeatAllCheckBox)
                    .addComponent(jLabel1)
                    .addComponent(repeatTrackCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playButtonMouseClicked
        try {
            player.switchPlaybackState();
        } catch (JavaLayerException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_playButtonMouseClicked

    private void stopButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseClicked
        player.stop();
    }//GEN-LAST:event_stopButtonMouseClicked

    private void nextButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseClicked
        nextTrack();
    }//GEN-LAST:event_nextButtonMouseClicked

    private void prevButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevButtonMouseClicked
        prevTrack();
    }//GEN-LAST:event_prevButtonMouseClicked

    private void trackListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trackListMouseClicked
        int idx = trackList.getSelectedIndex();
        if (idx != playlist.getCurrent()) {
            playTrack();
        }
    }//GEN-LAST:event_trackListMouseClicked

    private void openButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openButtonMouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File(directory));
        chooser.setDialogTitle("Open folder");
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            directory = chooser.getSelectedFile().getAbsolutePath();
            loadFolder(directory);
        }
    }//GEN-LAST:event_openButtonMouseClicked

    private void shuffleCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shuffleCheckBoxActionPerformed
        playlist.switchShuffle();
    }//GEN-LAST:event_shuffleCheckBoxActionPerformed

    private void repeatAllCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatAllCheckBoxActionPerformed
        playlist.switchRepeatAll();
    }//GEN-LAST:event_repeatAllCheckBoxActionPerformed

    private void repeatTrackCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatTrackCheckBoxActionPerformed
        playlist.switchRepeatTrack();
    }//GEN-LAST:event_repeatTrackCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton openButton;
    private javax.swing.JButton playButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JCheckBox repeatAllCheckBox;
    private javax.swing.JCheckBox repeatTrackCheckBox;
    private javax.swing.JCheckBox shuffleCheckBox;
    private javax.swing.JButton stopButton;
    private javax.swing.JList<String> trackList;
    // End of variables declaration//GEN-END:variables
}
